# encoding: utf-8
# Release 19.1
SetScriptVersion(Version="19.1.103")
template1 = GetTemplate(TemplateName="Fluid Flow")
system1 = template1.CreateSystem()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Dimension="ThreeD", Precision="Double", EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ImportSubMenu*Mesh...\")(cx-gui-do cx-activate-item \"Question*OK\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/student/Desktop/rad.msh/radbox.msh\") \"Mesh Files (*.msh* *.MSH* )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|General\"))(cx-gui-do cx-set-toggle-button2 \"General*Table1*Table3*CheckButton1(Gravity)\" #t)(cx-gui-do cx-activate-item \"General*Table1*Table3*CheckButton1(Gravity)\")(cx-gui-do cx-set-real-entry-list \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry2(Y)\" '( -9.81))(cx-gui-do cx-activate-item \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry2(Y)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Energy (Off)*On")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Off)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ModelSubMenu*Surface to Surface (S2S)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)" 100)(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*PushButton2(Apply to All Walls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton1( Compute/Write/Read)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_100.s2s.gz\") \"S2S Files (*.s2s*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-air*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 1))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry12\" '( 1021))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry14\" '( 0.0371))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry16\" '( 2.485e-05))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|aluminum"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Solid|aluminum"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-aluminum*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Create/Edit Materials*Table1*Frame1*Table1*TextEntry2(Chemical Formula)\" \"\")(cx-gui-do cx-set-text-entry \"Create/Edit Materials*Table1*Frame1*Table1*TextEntry1(Name)\" \"insulation\")(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry10\" '( 50))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry12\" '( 800))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry14\" '( 0.09))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*PushButton4(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Operating Conditions*Frame1*Table3(Gravity)*Table4(Variable-Density Parameters)*ToggleBox1*CheckButton1(Specified Operating Density)\" #t)(cx-gui-do cx-activate-item \"Operating Conditions*Frame1*Table3(Gravity)*Table4(Variable-Density Parameters)*ToggleBox1*CheckButton1(Specified Operating Density)\")(cx-gui-do cx-set-real-entry-list \"Operating Conditions*Frame1*Table3(Gravity)*Table4(Variable-Density Parameters)*RealEntry3(Operating Density)\" '( 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-x (wall, id=17)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-x (wall, id=17)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-w-high-x (wall, id=17)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Mixed\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Mixed\")(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table2*DropDownList1(Material Name)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table2*DropDownList1(Material Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table3*RealEntry2(Heat Transfer Coefficient)\" '( 5))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table4*RealEntry2(Free Stream Temperature)\" '( 293.15))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table5*RealEntry2(External Emissivity)\" '( 0.75))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table6*RealEntry2(External Radiation Temperature)\" '( 293.15))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table7*RealEntry2(Internal Emissivity)\" '( 0.95))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*RealEntry8(Wall Thickness)\" '( 0.05))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-x (wall, id=17)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-w-high-x (wall, id=17)*Copy...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Copy Conditions*Table1*List2(To Cell Zones)\" '( 1))(cx-gui-do cx-activate-item \"Copy Conditions*Table1*List2(To Cell Zones)\")(cx-gui-do cx-set-list-selections \"Copy Conditions*Table1*List2(To Cell Zones)\" '( 1 4))(cx-gui-do cx-activate-item \"Copy Conditions*Table1*List2(To Cell Zones)\")(cx-gui-do cx-activate-item \"Copy Conditions*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Copy Conditions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-low-x (wall, id=18)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-low-x (wall, id=18)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-w-low-x (wall, id=18)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Temperature\")(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table1*RealEntry2(Temperature)\" '( 473.15))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table7*RealEntry2(Internal Emissivity)\" '( 0.95))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-y (wall, id=15)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-y (wall, id=15)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-w-high-y (wall, id=15)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Mixed\" #t)(cx-gui-do cx-activate-item \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*ToggleBox1*Mixed\")(cx-gui-do cx-set-list-selections \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table2*DropDownList1(Material Name)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table2*DropDownList1(Material Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table3*RealEntry2(Heat Transfer Coefficient)\" '( 3))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table4*RealEntry2(Free Stream Temperature)\" '( 293.15))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table5*RealEntry2(External Emissivity)\" '( 0.75))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table6*RealEntry2(External Radiation Temperature)\" '( 293.15))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table7*RealEntry2(Internal Emissivity)\" '( 0.95))(cx-gui-do cx-set-real-entry-list \"Wall*Frame3*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*RealEntry8(Wall Thickness)\" '( 0.05))(cx-gui-do cx-activate-item \"Wall*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-y (wall, id=15)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-w-high-y (wall, id=15)*Copy...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Copy Conditions*Table1*List2(To Cell Zones)\" '( 3))(cx-gui-do cx-activate-item \"Copy Conditions*Table1*List2(To Cell Zones)\")(cx-gui-do cx-activate-item \"Copy Conditions*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Copy Conditions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.0899591 -0.135688 0.0725833) '(0 0 0) '(0.0905164 0.106204 0.0866598) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
Save(Overwrite=True)
setup1.SendCommand(Command="(cx-use-window-id 1)")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-low-x (wall, id=18)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-low-x (wall, id=18)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-low-y (wall, id=16)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-low-y (wall, id=16)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-w-low-y (wall, id=16)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-x (wall, id=17)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|w-high-x (wall, id=17)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-w-high-x (wall, id=17)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*PushButton4(Operating Conditions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Operating Conditions*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList1(Gradient)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList2(Pressure)\" '( 4))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList2(Pressure)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution Methods*Table1*CheckButton5(Pseudo Transient)" #t)(cx-gui-do cx-activate-item "Solution Methods*Table1*CheckButton5(Pseudo Transient)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton1(Residuals)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 0.0001))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry35\" '( 1e-07))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Initialization)*PushButton5(Initialize)")(cx-gui-do cx-activate-item "Question*Cancel")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Initialization)*PushButton5(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Iso-Surface...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Iso-Surface*Table1*DropDownList1(Surface of Constant)\" '( 9))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Iso-Surface*Table1*DropDownList1(Surface of Constant)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Iso-Surface*Table1*DropDownList1(Surface of Constant)\" '( 8))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Iso-Surface*Table1*DropDownList1(Surface of Constant)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Iso-Surface*Table1*DropDownList2\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Iso-Surface*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Iso-Surface*Table1*TextEntry7(New Surface Name)" "zz_center_z")(cx-gui-do cx-activate-item "Iso-Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Iso-Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton2(Definitions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Area-Weighted Average...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "surf-mon-1")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 7))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table2*DropDownList3(Field Variable)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ExportSubMenu*Case...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_a_1.cas.gz\") \"Case Files (*.cas*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Run Calculation)*PushButton4(Advanced)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Run Calculation*Table1*Table5(Pseudo Transient Options)*Table1(Fluid Time Scale)*ButtonBox1(Time Step Method)*User Specified" #t)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table5(Pseudo Transient Options)*Table1(Fluid Time Scale)*ButtonBox1(Time Step Method)*User Specified")(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 400)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ExportSubMenu*Case & Data...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_a_100.cas.gz\") \"Case/Data Files (*.cas* *.dat* )\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Display Options*meshdisplayconfigurations")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenumesh-display-configuration*Post Processing")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame7(Viewing)*Table1*Table3(Display)*CheckButton7(Lighting)" #f)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame7(Viewing)*Table1*Table3(Display)*CheckButton7(Lighting)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Surface)*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Line/Rake...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Line/Rake Surface*Table1*Frame4(End Points)*Table1*RealEntry1(x0)\" '( -0.125))(cx-gui-do cx-set-real-entry-list \"Line/Rake Surface*Table1*Frame4(End Points)*Table1*RealEntry4(x1)\" '( 0.125))(cx-gui-do cx-set-real-entry-list \"Line/Rake Surface*Table1*Frame4(End Points)*Table1*RealEntry3(z0)\" '( 0.125))(cx-gui-do cx-set-text-entry \"Line/Rake Surface*Table1*TextEntry6(New Surface Name)\" \"zz_x_side\")(cx-gui-do cx-activate-item \"Line/Rake Surface*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Line/Rake Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton7(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton7(Draw Mesh)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Contours*Table1*TextEntry2(Contour Name)" "contours-of-static-temperature")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton7(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton7(Draw Mesh)")(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\")(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 421))(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry2(Max)\" '( 473.15))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*New...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Contours*Table1*TextEntry2(Contour Name)\" \"contour-of-wall-temperature\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\")(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 413))(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry2(Max)\" '( 473.15))(cx-gui-do cx-set-text-entry \"Contours*Table1*TextEntry2(Contour Name)\" \"wall-temperature\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton2(Node Values)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 3 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 5 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 5 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 5 6 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera-relative '(-1.49624 -0.275777 -0.399489) '(0 0 0) '(0.393571 -0.6277 -0.491146) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.379128 0.103432 -0.840691) '(0 0 0) '(0.693006 -0.390873 0.243534) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera-relative '(0.569337 0.642635 10.1803) '(0 0 0) '(-0.0658629 1.07485 0.365349) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 5 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 5 6 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Contours*Table1*TextEntry2(Contour Name)" "radiation-heat-flux")(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton3(Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuVectors*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 7))(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 7))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-set-camera-relative '(0.407907 -0.459592 0.377289) '(0 0 0) '(-0.045746 0.105347 0.241755) 0 0)(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton3(Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuVectors*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*ToggleBox1(Options)*CheckButton5(Draw Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton4(Colors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Colors*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Vectors*Table1*Frame1*TextEntry1(Vector Name)" "vectors-of-velocity-magnitude")(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Model Specific)*PushButton6(S2S Information)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"S2S Information*Table1*ToggleBox1(Report Options)*CheckButton2(Incident Radiation)\" #t)(cx-gui-do cx-activate-item \"S2S Information*Table1*ToggleBox1(Report Options)*CheckButton2(Incident Radiation)\")(cx-gui-do cx-set-list-selections \"S2S Information*List2(From)\" '( 0))(cx-gui-do cx-activate-item \"S2S Information*List2(From)\")(cx-gui-do cx-set-list-selections \"S2S Information*List7(To)\" '( 0))(cx-gui-do cx-activate-item \"S2S Information*List7(To)\")(cx-gui-do cx-set-list-selections \"S2S Information*List7(To)\" '( 0 1))(cx-gui-do cx-activate-item \"S2S Information*List7(To)\")(cx-gui-do cx-set-list-selections \"S2S Information*List7(To)\" '( 0 1 2))(cx-gui-do cx-activate-item \"S2S Information*List7(To)\")(cx-gui-do cx-set-list-selections \"S2S Information*List7(To)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"S2S Information*List7(To)\")(cx-gui-do cx-set-list-selections \"S2S Information*List7(To)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"S2S Information*List7(To)\")(cx-gui-do cx-set-list-selections \"S2S Information*List7(To)\" '( 0 1 2 3 4 5))(cx-gui-do cx-activate-item \"S2S Information*List7(To)\")(cx-gui-do cx-set-list-selections \"S2S Information*List7(To)\" '( 1 2 3 4 5))(cx-gui-do cx-activate-item \"S2S Information*List7(To)\")(cx-gui-do cx-activate-item \"S2S Information*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Flux Reports*Table2*ToggleBox1(Options)*Total Heat Transfer Rate\" #t)(cx-gui-do cx-activate-item \"Flux Reports*Table2*ToggleBox1(Options)*Total Heat Transfer Rate\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 3))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 3 5))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 3 4 5))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 3 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "S2S Information*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Flux Reports*Table2*ToggleBox1(Options)*Radiation Heat Transfer Rate\" #t)(cx-gui-do cx-activate-item \"Flux Reports*Table2*ToggleBox1(Options)*Radiation Heat Transfer Rate\")(cx-gui-do cx-set-toggle-button2 \"Flux Reports*Table2*ToggleBox1(Options)*Total Heat Transfer Rate\" #t)(cx-gui-do cx-activate-item \"Flux Reports*Table2*ToggleBox1(Options)*Total Heat Transfer Rate\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 2 3 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 3 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 4 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 4))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Flux Reports*Table2*ToggleBox1(Options)*Radiation Heat Transfer Rate\" #t)(cx-gui-do cx-activate-item \"Flux Reports*Table2*ToggleBox1(Options)*Radiation Heat Transfer Rate\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 4))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 4))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 3 4))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 3 4 5))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 1 2 3 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Flux Reports*Table2*ToggleBox1(Options)*Radiation Heat Transfer Rate\" #t)(cx-gui-do cx-activate-item \"Flux Reports*Table2*ToggleBox1(Options)*Radiation Heat Transfer Rate\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 2 3 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 3 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 4 5 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 4 6))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 4))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Plots)*PushButton1(XY Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuXY Plot*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Table1*DropDownList1(Y Axis Function)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table3*Table1*DropDownList1(Y Axis Function)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Table1*DropDownList2\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table3*Table1*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\" '( 8))(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Solution XY Plot*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-use-window-id 2)")
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ExportSubMenu*Case & Data...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_b_100.cas.gz\") \"Case/Data Files (*.cas* *.dat* )\")")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Radiation (Surface to Surface (S2S))*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)" 800)(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*PushButton2(Apply to All Walls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton1( Compute/Write/Read)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_800.s2s.gz\") \"S2S Files (*.s2s*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup1.SendCommand(Command="(cx-use-window-id 2)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ExportSubMenu*Case & Data...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_800.cas.gz\") \"Case/Data Files (*.cas* *.dat* )\")")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-set-camera-relative '(-1.36942 -0.0683084 -0.541002) '(0 0 0) '(0.545764 -0.652366 -0.497455) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.15763 -0.0424363 0.541591) '(0 0 0) '(-0.103494 0.546029 0.200108) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0704617 -0.30021 0.286467) '(0 0 0) '(-0.236126 0.182369 0.249294) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.218569 0.0875903 -0.274917) '(0 0 0) '(0.177956 -0.0977944 -0.170898) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.32729 0.517678 -0.457082) '(0 0 0) '(0.423978 -0.4355 -0.199032) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.0795394 -0.341879 0.584973) '(0 0 0) '(-0.335285 0.479171 0.234007) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0987251 0.152798 -0.0855074) '(0 0 0) '(0.287565 -0.0437149 0.00382107) 0 0)(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Plots)*PushButton1(XY Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuXY Plot*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table1*List2(File Data)\" '())(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table1*List2(File Data)\")(cx-gui-do cx-set-toggle-button2 \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\" #t)(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\")(cx-gui-do cx-activate-item \"Solution XY Plot*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"tp_100.xy\") \"XY Files (*.xy)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)" #f)(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)")(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Plots)*PushButton1(XY Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuXY Plot*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\" #t)(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\")(cx-gui-do cx-activate-item \"Solution XY Plot*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"tp_800.xy\") \"XY Files (*.xy)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)" #f)(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)")(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Radiation (Surface to Surface (S2S))*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)" 1600)(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*PushButton2(Apply to All Walls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton1( Compute/Write/Read)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_1600.s2s.gz\") \"S2S Files (*.s2s*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-use-window-id 2)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Plots)*PushButton1(XY Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuXY Plot*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Plots)*PushButton1(XY Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuXY Plot*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\" '( 8))(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\" #t)(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\")(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Table1*DropDownList1(Y Axis Function)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table3*Table1*DropDownList1(Y Axis Function)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Table1*DropDownList2\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table3*Table1*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Solution XY Plot*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"tp_1600.xy\") \"XY Files (*.xy)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)" #f)(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)")(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-set-text-entry "Contours*Table1*TextEntry2(Contour Name)" "contour-wall-temp-1600")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-set-camera-relative '(0.176661 -0.0979049 0.0208164) '(0 0 0) '(-0.112427 0.0526465 0.000255749) 0 0)(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 5 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 1 2 3 4 5 6 7))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-set-camera-relative '(-0.942584 0.658772 -0.688593) '(0 0 0) '(0.127437 -0.120155 -0.203267) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.0433341 0.00989914 0.0390127) '(0 0 0) '(0.00671339 -0.00679576 -0.00608939) 0 0)(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Radiation (Surface to Surface (S2S))*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-set-camera-relative '(-0.349183 -0.21759 -0.323848) '(0 0 0) '(0.0436421 -0.103585 0.830055) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.161503 -0.116789 0.392625) '(0 0 0) '(0.0977104 -0.0165818 -0.108516) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.633695 -0.0398691 0.443005) '(0 0 0) '(0.270924 -0.276136 -0.248082) 0 0)(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera-relative '(-1.70167 -1.39919 -2.35551) '(0 0 0) '(-0.85854 -0.84486 0.769433) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.461264 -0.334108 1.12988) '(0 0 0) '(0.619949 0.257538 -0.175736) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(-0.101949 0.0461558 -0.107851) '(0 0 0) '(-0.0632119 -0.0351154 0.0447579) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(-0.285914 0.157251 -0.534748) '(0 0 0) '(-0.24633 -0.40074 -0.0700709) 0 0)(cx-gui-do cx-activate-item \"View Factors and Clustering*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-set-camera-relative '(1.23794 1.02176 1.33204) '(0 0 0) '(0.605302 0.615739 -0.434182) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.00989765 0.887337 -0.558459) '(0 0 0) '(-0.031216 0.0136328 0.0969181) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(-0.121168 -0.3299 -2.54378) '(0 0 0) '(-0.927166 0.807316 0.229251) 0 0)(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera-relative '(-1.14152 -0.978957 2.03692) '(0 0 0) '(0.302458 -0.302107 0.218445) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(1.43518 1.1628 0.705406) '(0 0 0) '(0.678881 -0.420151 -0.685116) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(-0.336605 0.49086 -1.04262) '(0 0 0) '(-0.0642936 0.197271 0.132842) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(-1.11963 -1.11197 -0.334062) '(0 0 0) '(-0.639292 0.590716 0.135424) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.172252 0.153545 0.639284) '(0 0 0) '(0.222022 -0.0919393 -0.0313356) 0 0)(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera-relative '(2.99643 0.0111489 3.58158) '(0 0 0) '(-0.147743 0.115128 -0.598814) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|Radiation (Surface to Surface (S2S))\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Radiation (Surface to Surface (S2S))*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)" 800)(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*PushButton2(Apply to All Walls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton1( Compute/Write/Read)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_800.s2s.gz\") \"S2S Files (*.s2s*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")(cx-gui-do cx-activate-item "Question*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*ExportSubMenu*Case & Data...\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_800.cas.gz\") \"Case/Data Files (*.cas* *.dat* )\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.0215288 -0.326932 0.315419) '(0 0 0) '(-0.0971901 0.136765 0.134609) 0 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera 0.0117487 0.0631745 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Plots)*PushButton1(XY Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuXY Plot*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\" #t)(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table1*ButtonBox1(Options)*CheckButton4(Write to File)\")(cx-gui-do cx-activate-item \"Solution XY Plot*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"tp_800.xy\") \"XY Files (*.xy)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Radiation (Surface to Surface (S2S))*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)" 100)(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*PushButton2(Apply to All Walls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton1( Compute/Write/Read)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_100.s2s.gz\") \"S2S Files (*.s2s*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")(cx-gui-do cx-activate-item "Question*Cancel")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
solution1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-1.35164 -0.107717 -0.828555) '(0 0 0) '(0.686694 -0.89801 -0.463693) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.108657 -0.076239 -0.296931) '(0 0 0) '(0.212329 -0.173106 0.122099) 0 0)(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models|Radiation (Surface to Surface (S2S))\"))(cx-gui-do cx-list-tree-right-click \"NavigationPane*List_Tree1\" )")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Radiation (Surface to Surface (S2S))*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*PushButton2(Apply to All Walls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton1( Compute/Write/Read)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_100.s2s.gz\") \"S2S Files (*.s2s*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")(cx-gui-do cx-activate-item "Question*Cancel")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command='(cx-use-window-id 2)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera-relative '(-5.72706 2.53976 -3.02502) '(0 0 0) '(0.09318 -0.0738727 -0.365528) 0 0)(cx-use-window-id 2)(cx-set-camera-relative '(0.0883533 0.330113 -0.176755) '(0 0 0) '(0.24325 -0.169852 -0.195604) 0 0)")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Surface to Surface (S2S))"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Radiation (Surface to Surface (S2S))*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton3(          Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)" 1600)(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*IntegerEntry1(Faces per Surface Cluster for Flow Boundary Zones)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*Frame1(Clustering)*Table2*Frame1(Manual)*PushButton2(Apply to All Walls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "View Factors and Clustering*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Radiation Model*Table1*Frame3*Table1*Table2(View Factors and Clustering)*PushButton1( Compute/Write/Read)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"rad_1600.s2s.gz\") \"S2S Files (*.s2s*)\")(cx-gui-do cx-activate-item \"Question*OK\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Radiation Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Initialization*Initialize")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")')
setup1.SendCommand(Command='(cx-use-window-id 2)(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|wall-temperature"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-wall-temperature*Display")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-use-window-id 2)")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
