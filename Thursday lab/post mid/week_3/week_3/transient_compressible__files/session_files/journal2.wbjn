# encoding: utf-8
# Release 19.1
SetScriptVersion(Version="19.1.103")
system1 = GetSystem(Name="Geom")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit()
geometry1.Exit()
system2 = GetSystem(Name="FFF")
meshComponent1 = system2.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system2.GetContainer(ComponentName="Mesh")
mesh1.Edit()
mesh1.Edit()
mesh1.Exit()
mesh1.Edit()
mesh1.Exit()
mesh1.Edit()
mesh1.Exit()
meshComponent1.Reset()
meshComponent1.Refresh()
mesh1.Edit()
mesh1.Edit()
mesh1.Exit()
mesh1.Edit()
mesh1.Exit()
meshComponent1.Update(AllDependencies=True)
mesh1.Edit()
mesh1.Exit()
meshComponent1.Reset()
meshComponent1.Refresh()
mesh1.Edit()
Save(Overwrite=True)
Save(Overwrite=True)
Save(Overwrite=True)
mesh1.Exit()
mesh1.Edit()
Save(Overwrite=True)
mesh1.Exit()
setupComponent1 = system2.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system2.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton8(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame7(Viewing)*Table1*Table3(Display)*PushButton1(Views)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PushButton7(fl_List)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PushButton7(fl_List)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*Table4*List1(Mirror Planes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PushButton5(fl_SelectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*Table4*List1(Mirror Planes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PushButton6(fl_DeselectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*Table4*PushButton2(Define Plane)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mirror Planes*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*Table4*Frame3(Periodic Repeats)*PushButton1(Define)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Graphics Periodicity*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*Table4*PushButton2(Define Plane)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mirror Planes*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*Table4*PushButton2(Define Plane)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mirror Planes*Frame1(Plane Equation)*RealEntry2(Y)\" '( 1))(cx-gui-do cx-set-real-entry-list \"Mirror Planes*Frame1(Plane Equation)*RealEntry4(Distance)\" '( 0.1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mirror Planes*PanelButtons*PushButton5(Add)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mirror Planes*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '())(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '( 0))(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '())(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '( 0))(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-activate-item \"Views*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton3(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 59))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 1))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton3(Units)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Set Units*PanelButtons*PushButton2(Cancel)")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame7(Viewing)*Table1*Table3(Display)*PushButton1(Views)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*Table4*PushButton2(Define Plane)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Mirror Planes*Frame1(Plane Equation)*RealEntry2(Y)\" '( 1))(cx-gui-do cx-set-real-entry-list \"Mirror Planes*Frame1(Plane Equation)*RealEntry4(Distance)\" '( 0.1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mirror Planes*PanelButtons*PushButton5(Add)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mirror Planes*List2(Mirror Planes)\" '())(cx-gui-do cx-activate-item \"Mirror Planes*List2(Mirror Planes)\")(cx-gui-do cx-set-list-selections \"Mirror Planes*List2(Mirror Planes)\" '( 0))(cx-gui-do cx-activate-item \"Mirror Planes*List2(Mirror Planes)\")(cx-gui-do cx-activate-item \"Mirror Planes*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton2(Close)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton3(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 59))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 1))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox2(Type)*Density-Based" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox2(Type)*Density-Based")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-activate-item "Energy*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Energy (Off)*On")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ModelSubMenu*SST k-omega")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Materials|Fluid|air\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Materials|Fluid|air\"))(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 1))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*PushButton4(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Operating Conditions*Frame1*Table1(Pressure)*RealEntry2(Operating Pressure)\" '( 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
mesh1.Edit()
mesh1.Exit()
meshComponent1.Update(AllDependencies=True)
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton8(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame7(Viewing)*Table1*Table3(Display)*PushButton1(Views)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '( 0))(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-activate-item \"Views*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton3(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 59))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 1))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox2(Type)*Density-Based" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox2(Type)*Density-Based")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Energy (Off)*On")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ModelSubMenu*SST k-omega")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Materials|Fluid|air\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Materials|Fluid|air\"))(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 1))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*PushButton4(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Operating Conditions*Frame1*Table1(Pressure)*RealEntry2(Operating Pressure)\" '( 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inlet (velocity-inlet, id=5)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*RealEntry2(Supersonic/Initial Gauge Pressure)\" '( 91192.5))(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-inlet (velocity-inlet, id=5)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*Frame3*Frame1(Momentum)*Table1*DropDownList6(Velocity Specification Method)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Velocity Inlet*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*pressure-inlet")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Pressure Inlet*Frame3*Frame1(Momentum)*Table1*Table6*RealEntry2(Gauge Total Pressure)\" '( 91192.5))(cx-gui-do cx-set-real-entry-list \"Pressure Inlet*Frame3*Frame1(Momentum)*Table1*Table7*RealEntry2(Supersonic/Initial Gauge Pressure)\" '( 74666.39))(cx-gui-do cx-set-real-entry-list \"Pressure Inlet*Frame3*Frame1(Momentum)*Table1*Table3(Turbulence)*RealEntry9(Turbulent Intensity)\" '( 0.015))(cx-gui-do cx-activate-item \"Pressure Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outlet (pressure-outlet, id=6)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*RealEntry2(Gauge Pressure)\" '( 74666.39))(cx-gui-do cx-set-real-entry-list \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table3(Turbulence)*RealEntry9(Backflow Turbulent Intensity)\" '( 0.015))(cx-gui-do cx-activate-item \"Pressure Outlet*PanelButtons*PushButton1(OK)\")")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(Specific Dissipation Rate)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(Specific Dissipation Rate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Controls)*PushButton1(Controls)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Controls*Table1*Table1*Table1*RealEntry2(Courant Number)\" '( 50))(cx-gui-do cx-activate-item \"Solution Controls*Table1*Table1*Table1*RealEntry2(Courant Number)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton1(Residuals)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Residual Monitors*Table1*Table2*Table2*Table1*Table3*DropDownList1(Convergence Criterion)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*Table1*Table2*Table2*Table1*Table3*DropDownList1(Convergence Criterion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-use-window-id 1)(dolly-camera 0 -0.00118831 0)(cx-use-window-id 1)')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(dolly-camera 0.00130103 -0.0160421 0)(cx-use-window-id 1)(dolly-camera 0.0174338 -0.0213895 0)(cx-use-window-id 1)(cx-use-window-id 1)(dolly-camera 0.00130103 -0.00178245 0)(cx-use-window-id 1)(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton1(Residuals)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton2(Definitions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Mass Flow Rate...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "mass_flowrate_out")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 1 2))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\")(cx-gui-do cx-activate-item \"Surface Report Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|mass_flowrate_out-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass_flowrate_out-rfile*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Edit Report File*Table1*Table6(Output File Base Name)*TextEntry1" "noz_ss.out")(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Autosave...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command="(cx-use-window-id 1)")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Autosave (Every Iterations)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Autosave*ToggleBox4(Save Associated Case Files)*Each Time" #t)(cx-gui-do cx-activate-item "Autosave*ToggleBox4(Save Associated Case Files)*Each Time")(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Initialization)*PushButton5(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Adapt)*PushButton1(Mark/Adapt Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMethods*Gradient...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Gradient Adaption*Table2*ButtonBox3(Normalization)*Scale" #t)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*ButtonBox3(Normalization)*Scale")(cx-gui-do cx-set-toggle-button2 "Gradient Adaption*Table2*Frame4(Dynamic)*CheckButton1(Dynamic)" #t)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*Frame4(Dynamic)*CheckButton1(Dynamic)")(cx-gui-do cx-set-integer-entry "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)" 100)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry3(Coarsen Threshold)\" '( 0.3))(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry4(Refine Threshold)\" '( 0.7))(cx-gui-do cx-set-toggle-button2 \"Gradient Adaption*Table2*ButtonBox2(Method)*Gradient\" #t)(cx-gui-do cx-activate-item \"Gradient Adaption*Table2*ButtonBox2(Method)*Gradient\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton4(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*Table1*Frame2*ButtonBox1*PushButton3(Controls)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)" 20000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Adaption Controls*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Run Calculation)*PushButton4(Advanced)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 500)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Transcript")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Transcript")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"noz_ss.cas.gz\") \"All Files (*)\")")
setup1.SendCommand(Command="(cx-use-window-id 2)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Transcript")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"noz_ss.dat.gz\") \"All Files (*)\")")
setup1.SendCommand(Command='(cx-use-window-id 2)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Mesh*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox2(Edge Type)*Feature\" #t)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox2(Edge Type)*Feature\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 2 3 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 1 2 3 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-use-window-id 2)(dolly-camera -0.0328186 -0.0447292 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rollzoom")')
setup1.SendCommand(Command="""(cx-use-window-id 2)(cx-set-camera '(0.0671814 0.0947256 1.28697) '(0.0671814 0.0947256 0) '(0.877166 0.480188 0) 0.514788 0.514788 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.0671814 0.0947256 1.38781) '(0.0671814 0.0947256 0) '(0.998774 -0.0494987 0) 0.555126 0.555126 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.0671814 0.0947256 1.42084) '(0.0671814 0.0947256 0) '(0.910549 -0.4134 0) 0.568337 0.568337 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.0671814 0.0947256 1.71053) '(0.0671814 0.0947256 0) '(0.749628 -0.66186 0) 0.684212 0.684212 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.0671814 0.0947256 2.85204) '(0.0671814 0.0947256 0) '(0.616301 -0.787511 0) 1.14082 1.14082 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(-0.0254308 0.098312 0.270809) '(-0.0254308 0.098312 1.04244e-07) '(0.6163 -0.78751 4.24916e-09) 0.0765963 0.0765963 \"perspective\")
(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera '(0.119292 0.0664337 1.93392) '(0.119292 0.0664337 -2.3836e-07) '(0.476623 -0.879108 6.28645e-09) 0.546994 0.546994 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.119292 0.0664337 4.2243) '(0.119292 0.0664337 -2.3836e-07) '(0.493659 -0.869656 6.28644e-09) 1.19481 1.19481 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.119292 0.0664337 6.18941) '(0.119292 0.0664337 -2.3836e-07) '(0.366312 -0.930492 6.28644e-09) 1.75063 1.75063 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.119292 0.0664337 7.4799) '(0.119292 0.0664337 -2.3836e-07) '(0.355714 -0.934595 6.28644e-09) 2.11564 2.11564 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.104232 0.0886223 2.18394) '(0.104232 0.0886223 1.74751e-07) '(0.283431 -0.958993 6.22822e-09) 0.617712 0.617712 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.104232 0.0886223 2.98902) '(0.104232 0.0886223 1.74751e-07) '(0.143995 -0.989578 6.22822e-09) 0.845422 0.845422 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.104232 0.0886223 1.89729) '(0.104232 0.0886223 1.74751e-07) '(0.143995 -0.989578 6.22822e-09) 0.536635 0.536635 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.104232 0.0886223 1.26569) '(0.104232 0.0886223 1.74751e-07) '(-0.0324657 -0.999473 6.22822e-09) 0.357992 0.357992 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.104232 0.0886223 1.26044) '(0.104232 0.0886223 1.74751e-07) '(0.0194813 -0.99981 6.22822e-09) 0.356506 0.356506 \"perspective\")
(cx-use-window-id 2)""")
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton3(Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuVectors*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 50))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="""(cx-use-window-id 2)(cx-set-camera '(0.104232 0.0886223 1.20661) '(0.104232 0.0886223 1.74751e-07) '(-0.00487068 -0.999988 6.22822e-09) 0.341281 0.341281 \"perspective\")
(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton2(Cancel)\")""")
setup1.SendCommand(Command="(cx-use-window-id 2)(cx-set-camera '(0.010286 0.0133072 2.06136) '(0.010286 0.0133072 5.19336e-09) '(-0.0178576 -0.999841 7.68341e-09) 0.58304 0.58304 \"perspective\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup1.SendCommand(Command="(cx-use-window-id 2)(dolly-camera 0.0886436 -0.103675 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0 2))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
solution1 = system2.GetContainer(ComponentName="Solution")
solution1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
solutionComponent1 = system2.GetComponent(Name="Solution")
solutionComponent1.Update(Force=True)
solution1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera 0.00351629 -0.0363899 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rollzoom")')
setup1.SendCommand(Command="""(cx-use-window-id 1)(cx-set-camera '(0.103516 0.0863863 1.06192) '(0.103516 0.0863863 0) '(0.439101 0.898438 0) 0.424768 0.424768 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.103516 0.0863863 1.09851) '(0.103516 0.0863863 0) '(0.871652 0.490125 0) 0.439405 0.439405 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.103516 0.0863863 1.35139) '(0.103516 0.0863863 0) '(0.999272 0.038144 0) 0.540556 0.540556 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.103516 0.0863863 1.56454) '(0.103516 0.0863863 0) '(0.945914 -0.324417 0) 0.625814 0.625814 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.103516 0.0863863 2.25346) '(0.103516 0.0863863 0) '(0.83623 -0.548378 0) 0.901383 0.901383 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.103516 0.0863863 2.80129) '(0.103516 0.0863863 0) '(0.748552 -0.663076 0) 1.12052 1.12052 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 3.62459) '(0.0494079 0.0705507 -0.000223309) '(0.710828 -0.703366 0) 1.02525 1.02525 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 2.23886) '(0.0494079 0.0705507 -0.000223309) '(0.731077 -0.682295 0) 0.633308 0.633308 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 1.79818) '(0.0494079 0.0705507 -0.000223309) '(0.736591 -0.676338 0) 0.508665 0.508665 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 2.74659) '(0.0494079 0.0705507 -0.000223309) '(0.709685 -0.704519 0) 0.776915 0.776915 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 1.54721) '(0.0494079 0.0705507 -0.000223309) '(0.51886 -0.854859 0) 0.437681 0.437681 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 2.21928) '(0.0494079 0.0705507 -0.000223309) '(0.510508 -0.859873 0) 0.62777 0.62777 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 1.53632) '(0.0494079 0.0705507 -0.000223309) '(0.510508 -0.859873 0) 0.4346 0.4346 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 2.08371) '(0.0494079 0.0705507 -0.000223309) '(0.502108 -0.864805 0) 0.589427 0.589427 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 1.54822) '(0.0494079 0.0705507 -0.000223309) '(0.396328 -0.918109 0) 0.437965 0.437965 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 2.14474) '(0.0494079 0.0705507 -0.000223309) '(0.396328 -0.918109 0) 0.606687 0.606687 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0494079 0.0705507 1.6127) '(0.0494079 0.0705507 -0.000223309) '(-0.00649441 -0.999979 0) 0.456203 0.456203 \"perspective\")
(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Contours\"))""")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton3(Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuVectors*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 50))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0 2))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*List3(Boundaries)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PushButton5(fl_DeselectAll)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0 2))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox1(Time)*Transient" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox1(Time)*Transient")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Interpreted...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Interpreted UDFs*Table1*PushButton3(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/student/Desktop/week_3/week_3/pexit.c\") \"UDF Source Files (*.c)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outlet (pressure-outlet, id=6)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*DropDownList1\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*DropDownList1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Adapt)*PushButton1(Mark/Adapt Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMethods*Gradient...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)" 10)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry3(Coarsen Threshold)\" '( 0.3))(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry4(Refine Threshold)\" '( 0.7))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton4(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*Table1*Frame2*ButtonBox1*PushButton3(Controls)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry2(Min # of Cells)" 8000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry2(Min # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)" 30000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Adaption Controls*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
