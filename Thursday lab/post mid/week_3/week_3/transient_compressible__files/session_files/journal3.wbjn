# encoding: utf-8
# Release 19.1
SetScriptVersion(Version="19.1.103")
system1 = GetSystem(Name="FFF")
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Mesh*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox2(Edge Type)*Feature\" #t)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox2(Edge Type)*Feature\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton1(Mesh)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Sync Workbench")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Solution Files...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Files*List1(Solution Files at)\" '( 1))(cx-gui-do cx-activate-item \"Solution Files*List1(Solution Files at)\")(cx-gui-do cx-activate-item \"Solution Files*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Files*List1(Solution Files at)\" '( 0 1))(cx-gui-do cx-activate-item \"Solution Files*List1(Solution Files at)\")(cx-gui-do cx-set-list-selections \"Solution Files*List1(Solution Files at)\" '( 0))(cx-gui-do cx-activate-item \"Solution Files*List1(Solution Files at)\")(cx-gui-do cx-activate-item \"Solution Files*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Files*PushButton5(Recover Missing Solution)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Files*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(dolly-camera -0.00664186 -0.0507942 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rollzoom")')
setup1.SendCommand(Command="""(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 1.01688) '(0.0933582 0.100791 0) '(-0.412661 0.910885 0) 0.406751 0.406751 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 1.3655) '(0.0933582 0.100791 0) '(-0.758161 0.652068 0) 0.546201 0.546201 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 1.45567) '(0.0933582 0.100791 0) '(-0.94644 0.322881 0) 0.58227 0.58227 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 1.45567) '(0.0933582 0.100791 0) '(-0.933726 -0.357989 0) 0.58227 0.58227 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 1.50335) '(0.0933582 0.100791 0) '(-0.662468 -0.74909 0) 0.601339 0.601339 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 2.99487) '(0.0933582 0.100791 0) '(-0.63404 -0.7733 0) 1.19795 1.19795 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 3.69759) '(0.0933582 0.100791 0) '(-0.439101 -0.898438 0) 1.47904 1.47904 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0933582 0.100791 4.50821) '(0.0933582 0.100791 0) '(-0.161644 -0.986849 0) 1.80328 1.80328 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0572038 0.149934 1.92449) '(0.0572038 0.149934 2.14603e-06) '(-0.0162354 -0.999868 -3.49246e-10) 0.544326 0.544326 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(-0.202005 0.19345 1.92449) '(-0.202005 0.19345 2.14577e-06) '(-0.0162355 -0.999868 -1.86265e-09) 0.544326 0.544326 \"perspective\")
(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton2(Cancel)\")""")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton3(Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuVectors*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 50))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup1.SendCommand(Command='(cx-use-window-id 1)(dolly-camera 0.435192 -0.00909866 0)(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Interpreted...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outlet (pressure-outlet, id=6)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*DropDownList1\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*DropDownList1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Adapt)*PushButton1(Mark/Adapt Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMethods*Gradient...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)" 10)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry3(Coarsen Threshold)\" '( 0.3))(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry4(Refine Threshold)\" '( 0.7))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton4(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*Table1*Frame2*ButtonBox1*PushButton3(Controls)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry2(Min # of Cells)" 8000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry2(Min # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)" 30000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Adaption Controls*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|mass_flowrate_out-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass_flowrate_out-rfile*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Edit Report File*Table1*CheckButton8(Print to Console)" #f)(cx-gui-do cx-activate-item "Edit Report File*Table1*CheckButton8(Print to Console)")(cx-gui-do cx-set-toggle-button2 "Edit Report File*Table1*CheckButton8(Print to Console)" #t)(cx-gui-do cx-activate-item "Edit Report File*Table1*CheckButton8(Print to Console)")(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Reset()
solutionComponent1 = system1.GetComponent(Name="Solution")
solutionComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton8(Scale)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Scale Mesh*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame7(Viewing)*Table1*Table3(Display)*PushButton1(Views)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '( 0))(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '())(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-set-list-selections \"Views*Table4*List1(Mirror Planes)\" '( 0))(cx-gui-do cx-activate-item \"Views*Table4*List1(Mirror Planes)\")(cx-gui-do cx-activate-item \"Views*PanelButtons*PushButton1(Apply)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Views*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton3(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 59))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 1))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox2(Type)*Density-Based" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox2(Type)*Density-Based")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Energy (Off)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Energy (Off)*On")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ModelSubMenu*SST k-omega")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-air*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\" '( 1))(cx-gui-do cx-activate-item \"Create/Edit Materials*Table2*Table1(Properties)*DropDownList4(Density)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*PushButton4(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Operating Conditions*Frame1*Table1(Pressure)*RealEntry2(Operating Pressure)\" '( 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|inlet (velocity-inlet, id=5)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*pressure-inlet")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Pressure Inlet*Frame3*Frame1(Momentum)*Table1*Table6*RealEntry2(Gauge Total Pressure)\" '( 91192.5))(cx-gui-do cx-set-real-entry-list \"Pressure Inlet*Frame3*Frame1(Momentum)*Table1*Table7*RealEntry2(Supersonic/Initial Gauge Pressure)\" '( 74666.39))(cx-gui-do cx-set-real-entry-list \"Pressure Inlet*Frame3*Frame1(Momentum)*Table1*Table3(Turbulence)*RealEntry9(Turbulent Intensity)\" '( 0.015))(cx-gui-do cx-activate-item \"Pressure Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outlet (pressure-outlet, id=6)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*RealEntry2(Gauge Pressure)\" '( 74666.39))(cx-gui-do cx-set-real-entry-list \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table3(Turbulence)*RealEntry9(Backflow Turbulent Intensity)\" '( 0.015))(cx-gui-do cx-activate-item \"Pressure Outlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(Specific Dissipation Rate)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table3(Spatial Discretization)*DropDownList4(Specific Dissipation Rate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Controls)*PushButton1(Controls)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Solution Controls*Table1*Table1*Table1*RealEntry2(Courant Number)\" '( 50))(cx-gui-do cx-activate-item \"Solution Controls*Table1*Table1*Table1*RealEntry2(Courant Number)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton1(Residuals)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Residual Monitors*Table1*Table2*Table2*Table1*Table3*DropDownList1(Convergence Criterion)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*Table1*Table2*Table2*Table1*Table3*DropDownList1(Convergence Criterion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton2(Definitions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*Surface ReportSubMenu*Mass Flow Rate...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Surface Report Definition*Table1*Table1*TextEntry1(Name)" "mass_flowrate_out")(cx-gui-do cx-activate-item "Surface Report Definition*Table1*Table1*TextEntry1(Name)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table2*Table6*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton1(Report File)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton2(Report Plot)\")(cx-gui-do cx-set-toggle-button2 \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\" #t)(cx-gui-do cx-activate-item \"Surface Report Definition*Table1*Table1*Table6(Create)*CheckButton4(Print to Console)\")(cx-gui-do cx-activate-item \"Surface Report Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|mass_flowrate_out-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass_flowrate_out-rfile*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Edit Report File*Table1*Table6(Output File Base Name)*TextEntry1" "noz_ss.out")(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Transcript")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Autosave (Every Iterations)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))(cx-gui-do cx-set-toggle-button2 "Autosave*ToggleBox4(Save Associated Case Files)*Each Time" #t)(cx-gui-do cx-activate-item "Autosave*ToggleBox4(Save Associated Case Files)*Each Time")(cx-gui-do cx-set-toggle-button2 "Autosave*ToggleBox4(Save Associated Case Files)*Only if Modified" #t)(cx-gui-do cx-activate-item "Autosave*ToggleBox4(Save Associated Case Files)*Only if Modified")(cx-gui-do cx-set-toggle-button2 "Autosave*ToggleBox5(File Storage Options)*CheckButton1(Retain Only the Most Recent Files)" #t)(cx-gui-do cx-activate-item "Autosave*ToggleBox5(File Storage Options)*CheckButton1(Retain Only the Most Recent Files)")(cx-gui-do cx-set-toggle-button2 "Autosave*ToggleBox5(File Storage Options)*CheckButton1(Retain Only the Most Recent Files)" #f)(cx-gui-do cx-activate-item "Autosave*ToggleBox5(File Storage Options)*CheckButton1(Retain Only the Most Recent Files)")(cx-gui-do cx-set-toggle-button2 "Autosave*ToggleBox4(Save Associated Case Files)*Each Time" #t)(cx-gui-do cx-activate-item "Autosave*ToggleBox4(Save Associated Case Files)*Each Time")(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Execute Commands"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Cell Register Operations"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Cell Register Operations*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Manage Register Operations*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities|Autosave (Every Iterations)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Autosave (Every Iterations)*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Autosave*ToggleBox4(Save Associated Case Files)*Each Time" #t)(cx-gui-do cx-activate-item "Autosave*ToggleBox4(Save Associated Case Files)*Each Time")(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Initialization)*PushButton5(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Adapt)*PushButton1(Mark/Adapt Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMethods*Gradient...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Gradient Adaption*Table2*ButtonBox2(Method)*Gradient" #t)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*ButtonBox2(Method)*Gradient")(cx-gui-do cx-set-toggle-button2 "Gradient Adaption*Table2*Frame4(Dynamic)*CheckButton1(Dynamic)" #t)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*Frame4(Dynamic)*CheckButton1(Dynamic)")(cx-gui-do cx-set-integer-entry "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)" 100)(cx-gui-do cx-activate-item "Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry3(Coarsen Threshold)\" '( 0.3))(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry4(Refine Threshold)\" '( 0.7))(cx-gui-do cx-set-toggle-button2 \"Gradient Adaption*Table2*ButtonBox3(Normalization)*Scale\" #t)(cx-gui-do cx-activate-item \"Gradient Adaption*Table2*ButtonBox3(Normalization)*Scale\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton4(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*Table1*Frame2*ButtonBox1*PushButton3(Controls)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)" 20000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Adaption Controls*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Run Calculation)*PushButton4(Advanced)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 500)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command="(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Solution)*PushButton1(Methods)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Controls)*PushButton1(Controls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton1(Residuals)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton2(Definitions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMonitorDefinitions*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"Report Definitions*Table1*List1(Report Definitions)\")(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '())(cx-gui-do cx-activate-item \"Report Definitions*Table1*List1(Report Definitions)\")(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List1(Report Definitions)\" '( 0))(cx-gui-do cx-activate-item \"Report Definitions*Table1*List1(Report Definitions)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*ButtonBox3*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Report Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Report Definitions*Table1*List5(Used In)\" '( 0))(cx-gui-do cx-activate-item \"Report Definitions*Table1*List5(Used In)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*Table1*PushButton7(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Initialization)*PushButton5(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Adapt)*PushButton1(Mark/Adapt Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMethods*Gradient...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton4(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*Table1*Frame2*ButtonBox1*PushButton3(Controls)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Adaption Controls*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Run Calculation)*PushButton4(Advanced)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"noz_ss.cas.gz\") \"All Files (*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Transcript")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"noz_ss.dat.gz\") \"All Files (*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Transcript")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Mesh*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Table1*Frame3*List1(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-toggle-button2 \"Mesh Display*Table1*Frame1*Frame1*ToggleBox2(Edge Type)*Feature\" #t)(cx-gui-do cx-activate-item \"Mesh Display*Table1*Frame1*Frame1*ToggleBox2(Edge Type)*Feature\")(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 2)(dolly-camera 0.00742324 -0.00909748 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rollzoom")')
setup1.SendCommand(Command="""(cx-use-window-id 2)(cx-set-camera '(0.107423 0.0590939 1.1063) '(0.107423 0.0590939 0) '(-0.0227281 0.999742 0) 0.442521 0.442521 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.107423 0.0590939 0.895936) '(0.107423 0.0590939 0) '(-0.507713 0.861526 0) 0.358375 0.358375 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.107423 0.0590939 0.873343) '(0.107423 0.0590939 0) '(-0.802769 0.59629 0) 0.349337 0.349337 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.107423 0.0590939 0.811676) '(0.107423 0.0590939 0) '(-0.974095 0.226137 0) 0.324671 0.324671 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.107423 0.0590939 1.46566) '(0.107423 0.0590939 0) '(-0.992297 -0.123883 0) 0.586265 0.586265 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.107423 0.0590939 2.43604) '(0.107423 0.0590939 0) '(-0.911887 -0.410441 0) 0.974417 0.974417 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.16526 0.136044 2.79595) '(0.16526 0.136044 2.28011e-06) '(-0.811396 -0.584496 9.31323e-10) 0.790815 0.790815 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.16526 0.136044 4.2448) '(0.16526 0.136044 2.28011e-06) '(-0.715381 -0.698734 9.31323e-10) 1.20061 1.20061 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.173551 0.179446 1.74781) '(0.173551 0.179446 3.33789e-06) '(-0.54498 -0.838449 1.62981e-09) 0.494354 0.494354 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.173551 0.179446 1.97012) '(0.173551 0.179446 3.33789e-06) '(-0.369332 -0.929297 1.62981e-09) 0.557234 0.557234 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.173551 0.179446 1.80016) '(0.173551 0.179446 3.33789e-06) '(0.00811706 -0.999967 1.62981e-09) 0.509162 0.509162 \"perspective\")
(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera '(0.173551 0.179446 1.80016) '(0.173551 0.179446 3.33789e-06) '(-0.0048713 -0.999988 1.62981e-09) 0.509162 0.509162 \"perspective\")
(cx-use-window-id 2)(cx-use-window-id 2)(cx-gui-do cx-activate-item \"Mesh Display*PanelButtons*PushButton2(Cancel)\")""")
setup1.SendCommand(Command="""(cx-use-window-id 2)(cx-use-window-id 2)(cx-set-camera '(0.173551 0.179446 1.93414) '(0.173551 0.179446 3.33789e-06) '(0.00487006 -0.999988 1.62981e-09) 0.547056 0.547056 \"perspective\")
(cx-use-window-id 2)(cx-set-camera '(0.173551 0.179446 1.94112) '(0.173551 0.179446 3.33789e-06) '(0.001623 -0.999999 1.62981e-09) 0.549031 0.549031 \"perspective\")
(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|outlet (pressure-outlet, id=6)\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|interior-geo_3_srf.00 (interior, id=1)\"))""")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup1.SendCommand(Command="(cx-use-window-id 2)(dolly-camera -0.087787 0.0358196 0)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton2(Contours)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuContours*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)")(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton3(Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuVectors*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 50))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Reports)*PushButton2(Fluxes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-set-list-selections \"Flux Reports*List3(Boundaries)\" '( 0 2))(cx-gui-do cx-activate-item \"Flux Reports*List3(Boundaries)\")(cx-gui-do cx-activate-item \"Flux Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox1(Time)*Transient" #t)(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Setting Up Physics)*Table1*Table3(Solver)*ButtonBox1(Time)*Transient")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Interpreted...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Interpreted UDFs*Table1*PushButton3(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/student/Desktop/week_3/week_3/pexit.c\") \"UDF Source Files (*.c)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|outlet (pressure-outlet, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-outlet (pressure-outlet, id=6)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*DropDownList1\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table6*DropDownList1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pressure Outlet*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Adapt)*PushButton1(Mark/Adapt Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuMethods*Gradient...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry3(Coarsen Threshold)\" '( 0.3))(cx-gui-do cx-set-real-entry-list \"Gradient Adaption*Table3*Table5*RealEntry4(Refine Threshold)\" '( 0.7))(cx-gui-do cx-set-integer-entry \"Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)\" 10)(cx-gui-do cx-activate-item \"Gradient Adaption*Table2*Frame4(Dynamic)*IntegerEntry2(Interval)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton4(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*Table1*Frame2*ButtonBox1*PushButton3(Controls)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry2(Min # of Cells)" 8000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry2(Min # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)" 30000)(cx-gui-do cx-activate-item "Mesh Adaption Controls*Frame7*IntegerEntry3(Max # of Cells)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Adaption Controls*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Gradient Adaption*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Files|mass_flowrate_out-rfile"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass_flowrate_out-rfile*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Edit Report File*Table1*Table6(Output File Base Name)*TextEntry1\" \".\\\\noz_uns.out\")(cx-gui-do cx-set-list-selections \"Edit Report File*Table1*Table7(Get Data Every)*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*Table1*Table7(Get Data Every)*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report File*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Report Plots|mass_flowrate_out-rplot"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mass_flowrate_out-rplot*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Edit Report Plot*Table1*Table5(Options)*Table2(Get Data Every)*DropDownList2\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report Plot*Table1*Table5(Options)*Table2(Get Data Every)*DropDownList2")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Edit Report Plot*Table1*Table5(Options)*DropDownList4(X-Axis Label)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report Plot*Table1*Table5(Options)*DropDownList4(X-Axis Label)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Report Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Journal\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"noz_uns.cas.gz\") \"All Files (*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Reports)*PushButton1(Residuals)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Residual Monitors*Table1*Table1*Table1(Options)*Table4*IntegerEntry2(Iterations to Plot)" 100)(cx-gui-do cx-activate-item "Residual Monitors*Table1*Table1*Table1(Options)*Table4*IntegerEntry2(Iterations to Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Run Calculation)*PushButton4(Advanced)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Run Calculation*Table1*Table7*RealEntry1(Time Step Size)\" '( 2.85593e-05))(cx-gui-do cx-activate-item \"Run Calculation*Table1*Table7*RealEntry1(Time Step Size)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7*IntegerEntry2(Number of Time Steps)" 600)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7*IntegerEntry2(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 10)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Transcript\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"noz_uns.cas.gz\") \"All Files (*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*WriteSubMenu*Stop Journal\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"noz_uns.dat.gz\") \"All Files (*)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Journal")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*WriteSubMenu*Stop Transcript")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton1(Autosave)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Autosave*Frame1*IntegerEntry1(Save Data File Every (Iterations))" 10)(cx-gui-do cx-activate-item "Autosave*Frame1*IntegerEntry1(Save Data File Every (Iterations))")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Autosave*Table6*DropDownList3(Append File Name with)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Autosave*Table6*DropDownList3(Append File Name with)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Autosave*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton2(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Solution Animations...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*Table2*DropDownList5\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Animation Definition*TextEntry1(Name:)" "presssure")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton1(New Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuNewObject*Contours...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList1(Contours of)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList1(Contours of)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\")(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 0.25))(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry2(Max)\" '( 1.25))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 0))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 1))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")(cx-gui-do cx-activate-item \"Animation Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton2(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Solution Animations...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Animation Definition*TextEntry1(Name:)\" \"mach-number\")(cx-gui-do cx-set-list-selections \"Animation Definition*Table2*DropDownList3\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table2*DropDownList3")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*Table2*DropDownList5\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton1(New Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuNewObject*Contours...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\" #t)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton1(Filled)\")(cx-gui-do cx-set-toggle-button2 \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\" #f)(cx-gui-do cx-activate-item \"Contours*Table1*Frame1*ToggleBox1(Options)*CheckButton4(Auto Range)\")(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry1(Min)\" '( 0))(cx-gui-do cx-set-real-entry-list \"Contours*Table1*Frame3*Frame2*Frame1*RealEntry2(Max)\" '( 1.3))(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 2))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")(cx-gui-do cx-activate-item \"Animation Definition*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton3(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton2(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Solution Animations...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 2))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table2*PushButton13(Preview)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PushButton3(fl_DeselectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton2(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Solution Animations...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 2))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*Table2*DropDownList5\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Contours*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 1))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PushButton3(fl_DeselectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 2))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PushButton3(fl_DeselectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton2(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton3(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton3(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton3(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton3(Manage)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton2(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Solution Animations...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 2))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PushButton3(fl_DeselectAll)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 2))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\" '( 0 1 2 3 4 5))(cx-gui-do cx-activate-item \"Contours*Table1*Frame3*Frame2*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Animation Definition*Table2*DropDownList5\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table2*DropDownList5")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Animation Definition*TextEntry1(Name:)" "mach-number")(cx-gui-do cx-set-integer-entry "Animation Definition*Table2*IntegerEntry10" 4)(cx-gui-do cx-activate-item "Animation Definition*Table2*IntegerEntry10")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Table1*Frame3*Table1*DropDownList2\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PushButton3(fl_DeselectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-use-window-id 5)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Activities)*PushButton2(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreate*Solution Animations...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 2))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 1))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Animation Definition*List3(Animation Object)\" '( 2))(cx-gui-do cx-activate-item \"Animation Definition*List3(Animation Object)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*Table6*PushButton2(Edit Object)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PushButton3(fl_DeselectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Animation Definition*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame5(Solving)*Table1*Table3(Run Calculation)*PushButton4(Advanced)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table7*IntegerEntry2(Number of Time Steps)" 100)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table7*IntegerEntry2(Number of Time Steps)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Solution Animation Playback"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Solution Animation Playback"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Scene Animation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Animations|Solution Animation Playback"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Solution Animation Playback*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 1))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 2))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 1))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 0))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 1))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 2))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 0))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 1))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Playback*Frame8*List1(Animation Sequences)\" '( 0))(cx-gui-do cx-activate-item \"Playback*Frame8*List1(Animation Sequences)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton6(forward)")(cx-gui-do cx-activate-item "Playback*Table1(Playback)*ButtonBox8*PushButton4(stop)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Playback*PanelButtons*PushButton2(Close)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame6(Postprocessing)*Table1*Table3(Graphics)*PushButton3(Vectors)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuVectors*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)" 50)(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*Frame3*IntegerEntry2(Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
setup1.SendCommand(Command='(cx-use-window-id 3)(dolly-camera 0 0 0)(cx-use-window-id 3)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*Table1*Frame3*Frame2*List2(Surfaces)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PushButton3(fl_DeselectAll)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
